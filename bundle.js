/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_DataRetriever__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/DataRetriever */ \"./src/modules/DataRetriever.js\");\n/* harmony import */ var _modules_ChallengeGrid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/ChallengeGrid */ \"./src/modules/ChallengeGrid.js\");\n\n\n\nconst container = document.querySelector('.challenges-list');\nconst retriever = new _modules_DataRetriever__WEBPACK_IMPORTED_MODULE_0__.DataRetriever();\nconst grid = new _modules_ChallengeGrid__WEBPACK_IMPORTED_MODULE_1__.ChallengeGrid(retriever, container);\n\ngrid.run()\n\n//# sourceURL=webpack://02-esc-website/./src/main.js?");

/***/ }),

/***/ "./src/modules/Challenge.js":
/*!**********************************!*\
  !*** ./src/modules/Challenge.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Challenge\": () => (/* binding */ Challenge)\n/* harmony export */ });\n/* harmony import */ var _modal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modal.js */ \"./src/modules/modal.js\");\n\n\nclass Challenge {\n    constructor(data) {\n        this.title = data.title;\n        this.rating = data.rating;\n        this.image = data.image;\n        this.type = data.type;\n        this.description = data.description;\n        this.minParticipants = data.minParticipants;\n        this.maxParticipants = data.maxParticipants;\n    }\n\n    render() {\n        // Create elements for challenge card\n        let challengesItem = document.createElement('li');\n        challengesItem.classList.add('challenges-item');\n\n        let challengesPicture = document.createElement('div')\n        challengesPicture.classList.add('challenge-picture');\n        challengesPicture.style.backgroundImage = `url(${this.image})`;\n\n        let challengesIconContainer = document.createElement('div');\n        challengesIconContainer.classList.add('challenges-icon');\n\n        let challengesIcon = document.createElement('i');\n        challengesIcon.className = this.type == 'online' ? 'icon fa-solid fa-laptop' : 'icon fa-solid fa-house';\n\n\n        let challengeTitle = document.createElement('h3');\n        challengeTitle.classList.add('challenge-title');\n        challengeTitle.innerHTML = this.title;\n\n        let challengeMeta = document.createElement('div');\n        challengeMeta.classList.add('challenge-meta');\n\n        let challengeRating = document.createElement('ul');\n        challengeRating.classList.add('challenge-rating');\n\n        // Create elements for rating stars\n        for(let i = 0; i < Math.floor(this.rating); i++) {\n            let challengeRatingStar = document.createElement('li');\n            challengeRatingStar.classList.add('challenge-rating-star');\n            challengeRatingStar.classList.add('on');\n            challengeRating.appendChild(challengeRatingStar);\n\n        };\n\n        for(let i = Math.floor(this.rating); i < 5; i++) {\n            let challengeRatingStar = document.createElement('li');\n            challengeRatingStar.classList.add('challenge-rating-star');\n            challengeRatingStar.classList.add('off');\n            challengeRating.appendChild(challengeRatingStar);\n        };\n\n        let challengeSize = document.createElement('small');\n        challengeSize.classList.add('challenge-size');\n        challengeSize.innerHTML = this.type === 'onsite' ? `${this.minParticipants}-${this.maxParticipants} participants` : `${this.minParticipants}-${this.maxParticipants} participants (networked)`;\n\n        let challengeDescription = document.createElement('p');\n        challengeDescription.classList.add('challenge-description');\n        challengeDescription.innerHTML = this.description\n\n        let challengeCta = document.createElement('a');\n        challengeCta.classList.add('challenge-cta');\n        challengeCta.innerText = this.type === 'onsite' ? \"Book the room\" : \"Take challenge online\";\n\n        challengeCta.addEventListener('click', () => {\n            (0,_modal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.title, this.minParticipants, this.maxParticipants);\n        });\n\n        // Render/append on site\n        challengesItem.appendChild(challengesPicture);\n        // challengesItem.appendChild(challengesIconContainer);\n        challengesPicture.appendChild(challengesIcon);\n        challengesItem.appendChild(challengeTitle);\n        challengesItem.appendChild(challengeMeta)\n        challengeMeta.appendChild(challengeRating);\n        challengeMeta.appendChild(challengeSize);\n        challengesItem.appendChild(challengeDescription);\n        challengesItem.appendChild(challengeCta);\n\n        return challengesItem;\n    }\n}\n\n//# sourceURL=webpack://02-esc-website/./src/modules/Challenge.js?");

/***/ }),

/***/ "./src/modules/ChallengeGrid.js":
/*!**************************************!*\
  !*** ./src/modules/ChallengeGrid.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ChallengeGrid\": () => (/* binding */ ChallengeGrid)\n/* harmony export */ });\n/* harmony import */ var _Challenge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Challenge */ \"./src/modules/Challenge.js\");\n/* harmony import */ var _Filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Filter */ \"./src/modules/Filter.js\");\n/* harmony import */ var _Sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Sort */ \"./src/modules/Sort.js\");\n\n\n\n\nclass ChallengeGrid {\n    constructor(retriever, container) {\n        this.retriever = retriever;\n        this.container = container;\n        this.challengeItems = [];\n        this.filters = {\n            byOnline: true,\n            byOnsite: true,\n            byLabel: false,\n            byRating: false,\n            byText: false,\n            labelsFilters: [],\n            minRatingFilter: 0,\n            maxRatingFilter: 5,\n            textFilter: ''\n        };\n        this.labelsArray = [];\n        this.minStarsArray = [];\n        this.maxStarsArray = [];\n        this.sorting = {\n            byHighRating: false,\n            byLowRating: true,\n            byCharA: false,\n            byCharZ: false\n        }\n    }\n\n    async run() {\n        this.challenges = await this.retriever.load();\n\n        this.render();\n    }\n\n    render() {\n        const filterInstance = new _Filter__WEBPACK_IMPORTED_MODULE_1__.Filter(this.filters);\n        const challengeArray = filterInstance.filterArray(this.challenges)\n        challengeArray.forEach(challengeData => {\n        const challengeInstance = new _Challenge__WEBPACK_IMPORTED_MODULE_0__.Challenge(challengeData);\n        const challengeItem = challengeInstance.render();\n        this.container.appendChild(challengeItem);\n        this.challengeItems.push(challengeData);\n        });\n\n        // FILTERBOX\n        const filterButton = document.querySelector('.filter-cta');\n        filterButton.addEventListener('click', () =>\n            {\n                filterButton.style.display = 'none';\n                filterBoard.style.display = \"block\";\n            }\n        );\n\n        const filterBoard = document.querySelector('.filter-board');\n        filterBoard.style.display = 'none';\n\n        const filterMenu  = document.createElement('div');\n        filterMenu.classList.add(\"filter-menu\");\n        filterBoard.appendChild(filterMenu);\n\n        const filterBoxTitle = document.createElement('h3');\n        filterBoxTitle.classList.add(\"filter-box-title\");\n        filterMenu.appendChild(filterBoxTitle);\n        filterBoxTitle.innerHTML = \"Filter challenges\";\n\n        const xButton = document.createElement('a');\n        xButton.classList.add(\"x-button-style\");\n        const btnSpan = document.createElement('p');\n        btnSpan.innerHTML = \"&#10005;\";\n        xButton.appendChild(btnSpan);\n        filterMenu.appendChild(xButton);\n        xButton.addEventListener('click', () =>\n            {\n                filterButton.style.display = 'block';\n                filterBoard.style.display = \"none\";\n            }\n        );\n\n        const filtersToChoose = document.createElement('div');\n        filtersToChoose.classList.add('choose-filter-box');\n        filterMenu.appendChild(filtersToChoose);\n\n        const filterType = document.createElement('div');\n        filterType.classList.add(\"filter-by-type\");\n        filtersToChoose.appendChild(filterType);\n\n        const filterTypeTitle = document.createElement('h4');\n        filterTypeTitle.innerHTML = \"By Type\";\n        filterType.appendChild(filterTypeTitle);\n\n        const filterTypeList = document.createElement('ul');\n        filterType.appendChild(filterTypeList);\n\n        const filterListPoint1 = document.createElement('li');\n        filterTypeList.appendChild(filterListPoint1);\n        filterListPoint1.addEventListener('change', () => {\n            if (!this.filters.byOnline) {\n                this.filters.byOnline = true;\n                this.rerender();\n            } else {\n                this.filters.byOnline = false;\n                this.rerender();\n            }\n        });\n\n        const filterTypeCheck1 = document.createElement('input');\n        filterTypeCheck1.type = \"checkbox\";\n        filterTypeCheck1.checked = true;\n        filterListPoint1.appendChild(filterTypeCheck1);\n\n        const filterTypeText1 = document.createElement('label');\n        filterTypeText1.innerHTML = \"&nbspInclude online challenges\";\n        filterListPoint1.appendChild(filterTypeText1);\n\n        const filterListPoint2 = document.createElement('li');\n        filterTypeList.appendChild(filterListPoint2);\n        filterListPoint2.addEventListener('change', () => {\n            if (!this.filters.byOnsite) {\n                this.filters.byOnsite = true;\n                this.rerender();\n            } else {\n                this.filters.byOnsite = false;\n                this.rerender();\n            }\n        });\n\n        const filterTypeCheck2 = document.createElement('input');\n        filterTypeCheck2.type = \"checkbox\";\n        filterTypeCheck2.checked = true;\n        filterListPoint2.appendChild(filterTypeCheck2);\n\n        const filterTypeText2 = document.createElement('label');\n        filterTypeText2.innerHTML = \"&nbspInclude on-site challenges\";\n        filterListPoint2.appendChild(filterTypeText2);\n\n        const filterRating = document.createElement('div');\n        filterRating.classList.add(\"filter-by-rating\");\n        filtersToChoose.appendChild(filterRating);\n\n        const filterRatingTitle = document.createElement('h4');\n        filterRatingTitle.innerHTML = \"By Rating\";\n        filterRating.appendChild(filterRatingTitle);\n\n        const filterRatingList = document.createElement('ul');\n        filterRating.appendChild(filterRatingList);\n\n        function createStars(starsArr) {\n            for (let i = 0; i < 5; i++) {\n                starsArr[i] = document.createElement('li');\n                starsArr[i].classList.add(\"filter-rating-star\");\n                starsArr[i].classList.add(\"off\");\n                filterRatingList.appendChild(starsArr[i]);\n                starsArr.push();\n            }\n        };\n\n        createStars(this.minStarsArray);\n\n        this.minStarsArray.forEach(star => {\n            star.addEventListener('click', () => {\n                let i = this.minStarsArray.indexOf(star);\n                let clickedStar = i + 1;\n\n                if(star.classList.contains('off')) {\n                    for (i; i >= 0; i--) {\n                        this.minStarsArray[i].classList.add('on');\n                        this.minStarsArray[i].classList.remove('off');\n                    }\n                } else {\n                    clickedStar--;\n                    for (i; i < this.minStarsArray.length; ++i) {\n                        this.minStarsArray[i].classList.add('off');\n                        this.minStarsArray[i].classList.remove('on');\n                    }\n                };\n\n                this.filters.minRatingFilter = clickedStar;\n                this.filters.byRating = true;\n                this.rerender();\n            });\n        });\n\n        // Label \"to\" between stars\n        const filterStarLabel = document.createElement('li');\n        filterStarLabel.innerHTML = \"&nbspto&nbsp\";\n        filterStarLabel.style.textAlign = \"center\";\n        filterStarLabel.style.padding = \"0.5rem\";\n        filterRatingList.appendChild(filterStarLabel);\n\n        createStars(this.maxStarsArray);\n\n        this.maxStarsArray.forEach(star => {\n            star.addEventListener('click', () => {\n                let i = this.maxStarsArray.indexOf(star);\n                let clickedStar = i + 1;\n\n                if(star.classList.contains('off')) {\n                    for (i; i >= 0; i--) {\n                        this.maxStarsArray[i].classList.add('on');\n                        this.maxStarsArray[i].classList.remove('off');\n                    }\n                } else {\n                    clickedStar--;\n                    for (i; i < this.maxStarsArray.length; ++i) {\n                        this.maxStarsArray[i].classList.add('off');\n                        this.maxStarsArray[i].classList.remove('on');\n                    }\n                };\n\n                this.filters.maxRatingFilter = clickedStar;\n                this.filters.byRating = true;\n                this.rerender();\n            });\n        });\n\n        // Tag creation\n        const filterTag = document.createElement('div');\n        filterTag.classList.add(\"filter-by-tag\");\n        filtersToChoose.appendChild(filterTag);\n\n        const filterTagTitle = document.createElement('h4');\n        filterTagTitle.innerHTML = \"By Tag\";\n        filterTag.appendChild(filterTagTitle);\n\n        const filterTagLabels = document.createElement('div');\n        filterTagLabels.classList.add(\"filter-by-tag-item\");\n        filterTag.appendChild(filterTagLabels);\n\n        // Creates array of all labels in all challenges\n        this.challenges.forEach(obj => {\n            obj.labels.forEach(label => {\n                if(!this.labelsArray.includes(label)) {\n                    this.labelsArray.push(label);\n                    const filterTagItem = document.createElement('label');\n                    filterTagItem.innerHTML = label[0].toUpperCase() + label.slice(1);\n                    filterTagItem.style.backgroundColor = 'white';\n                    filterTagLabels.appendChild(filterTagItem);\n                    filterTagItem.addEventListener('click', (event) => {\n                        // Label selected conditional\n                        if (filterTagItem.style.backgroundColor == \"white\") {\n                            filterTagItem.style.backgroundColor = \"lightslategray\";\n                            filterTagItem.style.color = \"white\";\n                            filterTagItem.style.borderColor = \"lightslategray\";\n                        } else {\n                            filterTagItem.style.backgroundColor = \"white\";\n                            filterTagItem.style.color = \"gray\";\n                            filterTagItem.style.borderColor = \"lightgray\";\n                        }\n\n                        const value = event.target.innerText.toLowerCase();\n                        const index = this.filters.labelsFilters.indexOf(value);\n                        this.filters.labelsFilters.includes(value) ? this.filters.labelsFilters.splice(index, 1) : this.filters.labelsFilters.push(value);\n                        this.filters.labelsFilters.length > 0 ? this.filters.byLabel = true : this.filters.byLabel = false;\n\n                        this.rerender();\n                    })\n                }\n            });\n        });\n\n        const filterSearchText = document.createElement('div');\n        filterSearchText.classList.add(\"filter-search-text\");\n        filterMenu.appendChild(filterSearchText);\n\n        const filterSearchTextTitle = document.createElement('h4');\n        filterSearchTextTitle.innerHTML = \"Or type to search for keyword\";\n        filterSearchText.appendChild(filterSearchTextTitle);\n\n        const searchText = document.createElement('input');\n        searchText.type = \"text\";\n        searchText.classList.add('filter-search-input');\n        searchText.placeholder = \"Start typing to filter\";\n        searchText.addEventListener('keyup', () => {\n            this.filters.byText = true;\n            this.filters.textFilter = searchText.value;\n            this.rerender();\n        });\n        filterSearchText.appendChild(searchText);\n\n        const sortDropDownContainer = document.querySelector('.sort-container');\n        const sortDropDown = document.createElement('select');\n        const sortPlaceholder = document.createElement('option');\n        sortPlaceholder.text = 'Sort'\n        sortPlaceholder.value = '';\n        sortPlaceholder.selected = true;\n        sortDropDown.add(sortPlaceholder);\n        const sortOptions = [{title: 'Title: A-Z', sort: 'byCharA'}, {title: 'Title: Z-A', sort: 'byCharZ'}, {title: 'Rating: High-Low', sort: 'byHighRating'}, {title: 'Rating: Low-High', sort: 'byLowRating'}];\n        sortOptions.forEach(opt => {\n            const option = document.createElement('option');\n            option.text = opt.title;\n            option.value = opt.sort;\n            sortDropDown.add(option);\n        })\n        sortDropDown.addEventListener('change', (event) => {\n            let sortOptionSelected = event.target.value;\n            let noSorting = (sortObj) => {\n                Object.keys(sortObj).forEach(function(key){ sortObj[key] = 'false'});\n                return sortObj;\n            }\n            noSorting(this.sorting);\n            this.sorting[sortOptionSelected] = true;\n            this.rerender();\n        })\n        sortDropDownContainer.appendChild(sortDropDown);\n    }\n\n    rerender() {\n        // Clear the DOM\n        this.container.innerHTML = '';\n\n        const filterInstance = new _Filter__WEBPACK_IMPORTED_MODULE_1__.Filter(this.filters);\n        const sortInstance = new _Sort__WEBPACK_IMPORTED_MODULE_2__.Sort(this.sorting);\n        const challengeArray = sortInstance.sortArray(filterInstance.filterArray(this.challengeItems));\n        if(challengeArray.length === 0 || challengeArray === null) {\n            const noChallenges = document.createElement('div');\n            noChallenges.innerHTML = 'No matching challenges';\n            noChallenges.classList.add('no-challenges');\n            this.container.appendChild(noChallenges);\n        };\n        challengeArray.forEach(challengeData => {\n        const challengeInstance = new _Challenge__WEBPACK_IMPORTED_MODULE_0__.Challenge(challengeData);\n        const challengeItem = challengeInstance.render();\n        this.container.appendChild(challengeItem);\n        });\n    }\n};\n\n//# sourceURL=webpack://02-esc-website/./src/modules/ChallengeGrid.js?");

/***/ }),

/***/ "./src/modules/DataRetriever.js":
/*!**************************************!*\
  !*** ./src/modules/DataRetriever.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DataRetriever\": () => (/* binding */ DataRetriever)\n/* harmony export */ });\nclass DataRetriever {\n    constructor() {\n        this.challenges = null;\n    }\n    async load() {\n        const url = 'https://lernia-sjj-assignments.vercel.app/api/challenges';\n        if(!this.challenges) {\n            try {\n                const response = await fetch(url);\n                const data = await response.json();\n                this.challenges = data.challenges;\n            } catch (error) {\n                console.log(error);\n                console.log(\"Challenges can't be loaded.\");\n            }    \n        }\n\n        return this.challenges;\n    }\n}\n\n//# sourceURL=webpack://02-esc-website/./src/modules/DataRetriever.js?");

/***/ }),

/***/ "./src/modules/Filter.js":
/*!*******************************!*\
  !*** ./src/modules/Filter.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Filter\": () => (/* binding */ Filter)\n/* harmony export */ });\nclass Filter {\n    constructor(filtersObj) {\n        this.filters = filtersObj\n    }\n    filterArray(array) {\n        let newArray = [];\n        let filteredArray = [];\n\n        if (this.filters.byOnline) {\n            filteredArray = array.filter(obj => {\n                return obj.type === 'online';\n            })\n            // Using spread to \"create\"/concat a new array with all values\n            newArray = [...newArray, ...filteredArray];\n        }\n\n        if (this.filters.byOnsite) {\n            filteredArray = array.filter(obj => {\n                return obj.type === 'onsite';\n            })\n            // Using spread to \"create\"/concat a new array with all values\n            newArray = [...newArray, ...filteredArray];\n        }\n\n        if (this.filters.byLabel) {\n            newArray = newArray.filter(obj => {\n                return this.filters.labelsFilters.every(label => obj.labels.includes(label));\n            })\n        }\n\n        if (this.filters.byRating) {\n            newArray = newArray.filter(obj => {\n                if(obj.rating >= this.filters.minRatingFilter && obj.rating <= this.filters.maxRatingFilter) {\n                    return obj;\n                }\n            });\n        }\n\n        if (this.filters.byText) {\n            newArray = newArray.filter(obj => {\n                // returns obj with title or description that includes the value from textFilter\n                return obj.description.toUpperCase().includes(this.filters.textFilter.toUpperCase()) || obj.title.toUpperCase().includes(this.filters.textFilter.toUpperCase());\n            });\n        }\n\n        // This shuffle is fluff, just for you Richard :)\n        const shuffledArray = newArray.sort((a, b) => 0.5 - Math.random());\n\n        return shuffledArray;\n    }\n}\n\n\n//# sourceURL=webpack://02-esc-website/./src/modules/Filter.js?");

/***/ }),

/***/ "./src/modules/Sort.js":
/*!*****************************!*\
  !*** ./src/modules/Sort.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Sort\": () => (/* binding */ Sort)\n/* harmony export */ });\nclass Sort {\n    constructor(sortByObj) {\n        this.sortByObj = {\n            byHighRating: sortByObj.byHighRating,\n            byLowRating: sortByObj.byLowRating,\n            byCharA: sortByObj.byCharA,\n            byCharZ: sortByObj.byCharZ\n        }\n    }\n\n    sortArray(array) {\n        let sortedArray = array;\n        // Sort challenges on rating low-to-high\n        if (this.sortByObj.byLowRating === true) {\n            function compare(a, b) {\n                if (a.rating < b.rating) {\n                    return -1;\n                }\n                if (a.rating > b.rating) {\n                    return 1;\n                }\n                return 0;\n            }\n            return sortedArray.sort(compare);\n        }\n        // Sort challenges on rating high-to-low\n        if (this.sortByObj.byHighRating === true) {\n            function compare(a, b) {\n                if (a.rating < b.rating) {\n                    return 1;\n                }\n                if (a.rating > b.rating) {\n                    return -1;\n                }\n                return 0;\n            }\n            return sortedArray.sort(compare);\n        }\n        // Sort challenges by first chars in title a-to-z\n        if (this.sortByObj.byCharA === true) {\n            function compare(a, b) {\n                if (a.title.substr(0, a.title.indexOf(' ')) < b.title.substr(0, b.title.indexOf(' '))) {\n                    return -1;\n                }\n                if (a.title.substr(0, a.title.indexOf(' ')) > b.title.substr(0, b.title.indexOf(' '))) {\n                    return 1;\n                }\n                return 0;\n            }\n            return sortedArray.sort(compare);\n        }\n        // Sort challenges by first chars in title z-to-a\n        if (this.sortByObj.byCharZ === true) {\n            function compare(a, b) {\n                if (a.title.substr(0, a.title.indexOf(' ')) < b.title.substr(0, b.title.indexOf(' '))) {\n                    return 1;\n                }\n                if (a.title.substr(0, a.title.indexOf(' ')) > b.title.substr(0, b.title.indexOf(' '))) {\n                    return -1;\n                }\n                return 0;\n            }\n            return sortedArray.sort(compare);\n        }\n\n        return sortedArray;\n    }\n}\n\n//# sourceURL=webpack://02-esc-website/./src/modules/Sort.js?");

/***/ }),

/***/ "./src/modules/modal.js":
/*!******************************!*\
  !*** ./src/modules/modal.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ modalFunc)\n/* harmony export */ });\nfunction modalFunc(h1title, minParticipants, maxParticipants) {\n\n  //===TODO==================================\n    // - STYLE\n  \n  // OPTIONAL:\n  // Stop \"set\"-processes after alert -- i.e. don't let user go to modal page 3\n\n  // IN PROGRESS:\n  // \n\n  // DONE:\n  // - DO THIRD PAGE (from Anders modals?)\n  // - CLEAR MODAL AFTER CLOSE\n  // - CONNECTING MODAL FROM DIFFERENT REPO TO MAIN GITHUB\n  // - ADD CLASS NAME TO BOOKING BUTTON -- DONE? BUTTON WORKING? SEE \"const btn\" above\n  // - INTEGRATE INTO MAIN BRANCH -- THAT IS, ADD THE .JS SEPARATELY -- SEPARATE FUNCTIONS. CLASSES AND MAKE THE CODE READABLE IS SECONDARY\n  // - THE BOOKING BUTTON IS ROOM SPECIFIC AND THUS SENDS ROOM TITLE AS WELL AS PARTICIPANTS (arguments with class name, like calling function -> send set value for arguments (min maxtitle room))\n  // - copy style.css -> main.css\n  // - CHECK GITLOG -- HISTORY IS CLEARED ON THIS BRANCH?\n  // - DATE - MIN MAX\n  // - Merge with main (pull request)\n  // - Fix removeChild that resets on Back to challenges\n  // - Get everything working on GitHub Pages\n  //========================================================\n\n  //  create the Modal\n  const modal = document.createElement(\"dialog\");\n  modal.className = \"modal\";\n  modal.id = \"myModal\";\n  document.body.appendChild(modal);\n  modal.style.display = \"block\";\n\n  // create Modal content for step 1\n  const div1 = document.createElement(\"div\");\n  div1.className = \"modal-content\";\n  modal.append(div1);\n\n  // create h1 in Modal step 1\n  const h1_1 = document.createElement(\"h1\");\n  h1_1.class = \"modal1h1\";\n  h1_1.id = \"modal1h1\";\n  h1_1.innerHTML = 'Book room \"' + h1title + '\" (step 1)';\n  div1.append(h1_1);\n\n  // create p in Modal step 1\n  const p = document.createElement(\"p\");\n  p.textContent = \"What date would you like to come?\";\n  p.classList.add('modal-content-text')\n  div1.append(p);\n\n  // create the date input in Modal step 1\n  const inp = document.createElement(\"input\");\n  const lab = document.createElement(\"label\");\n  const br = document.createElement(\"br\");\n  inp.name = \"inpDate\";\n  inp.id = \"date\";\n  inp.type = \"date\";\n  inp.name = \"date\";\n  lab.textContent = \"Date\";\n  div1.append(lab);\n  div1.append(inp);\n\n  // Set input options to min = today, max = 1 year from now\n  const d = new Date();\n  d.setYear(d.getFullYear() + 1);\n  date.max = d.toISOString().split(\"T\")[0]; //this simply converts it to the correct format\n  \n  const c = new Date();\n  date.min = c.toISOString().split(\"T\")[0];\n\n  // create search times button in Modal step 1\n  const btnSearch = document.createElement(\"button\");\n  btnSearch.innerText = \"Search available times\";\n  btnSearch.className = \"btnSearch btnModal\";\n  div1.append(btnSearch);\n\n  // create new div in Modal for the step 2 booking process\n  const div2 = document.createElement(\"div\");\n  div2.className = \"modal-content\";\n  div2.id = \"divstep2\";\n  modal.append(div2);\n\n  // create h1 in Modal step 2\n  const h1_2 = document.createElement(\"h1\");\n  h1_2.class = \"modal2h1\";\n  h1_2.id = \"modal2h1\";\n  div2.append(h1_2);\n\n  // create input for the name in Modal step 2\n  const inp2 = document.createElement(\"input\");\n  const lab2 = document.createElement(\"label\");\n  inp2.name = \"inpName\";\n  inp2.type = \"text\";\n  lab2.textContent = \"Name\";\n  div2.append(lab2);\n  div2.append(inp2);\n\n  // create input for the email in Modal step 2\n  const inp3 = document.createElement(\"input\");\n  const lab3 = document.createElement(\"label\");\n  inp3.name = \"inpEmail\";\n  inp3.type = \"email\";\n  lab3.textContent = \"E-mail\";\n  div2.append(lab3);\n  div2.append(inp3);\n\n  // create select element for the available times in Modal step 2\n  const selectTime = document.createElement(\"select\");\n  selectTime.name = \"timeList\";\n  selectTime.id = \"availableTimeList\";\n  const lab4 = document.createElement(\"label\");\n  lab4.textContent = \"What time?\";\n  div2.append(lab4);\n  div2.append(selectTime);\n\n  // create select element for the participants in Modal step 2\n  const selectPart = document.createElement(\"select\");\n  selectPart.name = \"participantsList\";\n  selectPart.id = \"availableParticipantsList\";\n  const lab5 = document.createElement(\"label\");\n  lab5.textContent = \"How many participants?\";\n  div2.append(lab5);\n  div2.append(selectPart);\n\n  // create submit booking button in Modal step 2\n  const btnSubmit = document.createElement(\"button\");\n  btnSubmit.innerText = \"Submit booking\";\n  btnSubmit.className = \"btnSubmit btnModal\";\n  div2.append(btnSubmit);\n\n  // create new div in Modal for the step 3 booking process\n  const div3 = document.createElement(\"div\");\n  div3.className = \"modal-content\";\n  div3.id = \"divstep3\";\n  modal.append(div3);\n\n  // create h1 in Modal step 3\n  const h1_3 = document.createElement(\"h1\");\n  h1_3.class = \"modal3h1\";\n  h1_3.textContent = \"Thank you!\";\n  div3.append(h1_3);\n\n  const modal3link = document.createElement(\"a\");\n  div3.append(modal3link);\n  modal3link.classList.add('challenges-link');\n  modal3link.setAttribute(\"href\", \"#\");\n  modal3link.textContent = \"Back to challenges\";\n\n  // Add same class to modal content items to style them\n  inp.className = 'modal-content-text';\n  inp2.className = 'modal-content-text';\n  inp3.className = 'modal-content-text';\n  lab.className = 'modal-content-text';\n  lab2.className = 'modal-content-text';\n  lab3.className = 'modal-content-text';\n  lab4.className = 'modal-content-text';\n  lab5.className = 'modal-content-text';\n\n\n  // clicking on the leaving link on Modal step 3\n  modal3link.onclick = function () {\n    document.body.removeChild(modal);\n  };\n\n  // When the user clicks the button, open the modal\n\n  // const m1h1 = document.getElementById(\"modal1h1\");\n\n  // m1h1.textContent = 'Book room \"' + h1title + '\" (step 1)';\n\n  // When the user clicks anywhere outside of the modal, close it\n  window.onclick = function (event) {\n    if (event.target == modal) {\n      //modal.style.display = \"none\";\n      document.body.removeChild(modal);\n    }\n  };\n\n  function setBookingDate() {\n    // if (inp.value == \"\") {\n    //   alert(\"Error, no selected date.\");\n    //   // stop the process here until the date is selected\n    // }\n    return inp.value;\n  }\n\n  // Clicking on the search botton function\n  btnSearch.onclick = function () {\n    const reqDate = setBookingDate();\n    if (inp.value == \"\") {\n      alert(\"Error, no selected date.\");\n      // stop the process here until the date is selected\n      \n    }else    {\n\n        const availableTimes = searchAvailableTimes(reqDate);\n        // if (availableTimes.booking.date != reqDate) {\n        // alert('No matching available date, please choose again.\\nThe available date is ' + availableTimes.booking.date)\n        // }\n\n        async function searchAvailableTimes(reqDate) {\n          const response = await fetch(\n            \"https://lernia-sjj-assignments.vercel.app/api/booking/available-times?date=\" +\n              reqDate,\n            {\n              method: \"GET\",\n              mode: \"cors\",\n              headers: { \"Content-Type\": \"application/json\" },\n            }\n          ).then(function (response) {\n            if (response.ok) {\n              response.json().then(function (data) {\n                const gatheredTimes = data.slots;\n\n                // call a function to switch the booking process to the next step\n                bookingNextStep(gatheredTimes);\n              });\n            }\n          });\n        };\n    }\n  \n  };\n\n  function bookingNextStep(gatheredTimes) {\n    // forming the title header for step 2\n    const m2h1 = document.getElementById(\"modal2h1\");\n    m2h1.textContent = 'Book room \"' + h1title + '\" (step 2)';\n\n    // adding available time options to the time list\n    let option;\n    for (let i = 0; i < gatheredTimes.length; i++) {\n      option = document.createElement(\"option\");\n      option.text = gatheredTimes[i];\n      option.value = gatheredTimes[i];\n      selectTime.add(option);\n    }\n\n    // adding available participants to the participants list\n    let option2;\n    for (let i = minParticipants; i <= maxParticipants; i++) {\n      option2 = document.createElement(\"option\");\n      option2.text = i + \" participants\";\n      option2.value = i;\n      selectPart.add(option2);\n    }\n\n    // changing from step 1 to step 2\n    div1.style.display = \"none\";\n    div2.style.display = \"flex\";\n  }\n\n  function setParticipantName() {\n    if (inp2.value == \"\") {\n      alert(\"Error, no entered participant name.\");\n      // TODO\n      // stop the process here until the date is selected\n    }\n    return inp2.value;\n  }\n\n  function setEmail() {\n    var pattern = /^[^]+@[^]+\\.[a-z]{2,3}$/;\n    if (inp3.value == \"\") {\n      alert(\"Error, no entered e-mail.\");\n      // TODO\n      // stop the process here until the date is selected\n    } else if (!inp3.value.match(pattern)) {\n      alert(\"Error, the entered email is invalid.\");\n      // stop the process here until the date is selected\n    } else {\n      return inp3.value;\n    }\n  }\n\n  function setBookingTime() {\n    if (selectTime.value == \"\") {\n      alert(\"Error, no selected time.\");\n      // TODO\n      // stop the process here until the date is selected\n    }\n    return selectTime.value;\n  }\n\n  function setParticipantsNumber() {\n    if (selectPart.value == \"\") {\n      alert(\"Error, no selected participants number.\");\n      // TODO\n      // stop the process here until the date is selected\n    }\n    return selectPart.value;\n  }\n\n  // Clicking on the submit botton function\n  btnSubmit.onclick = function (event) {\n\n    // set booking date\n    const reqDate = setBookingDate();\n \n    // set participant name\n    const reqName = setParticipantName();\n    \n    // set participant email\n    const reqEmail = setEmail();\n\n    // set time period\n    const reqTime = setBookingTime();\n\n    // set number of participants\n    const reqPart = setParticipantsNumber();\n    if (reqDate && reqName && reqEmail && reqTime && reqPart) {\n\n      postBookingData(reqName, reqEmail, reqDate, reqTime, reqPart);\n\n      // build the post object to the server\n      async function postBookingData(\n        reqName,\n        reqEmail,\n        reqDate,\n        reqTime,\n        reqPart\n      ) {\n        const res = await fetch(\n          \"https://lernia-sjj-assignments.vercel.app/api/booking/reservations\",\n          {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              name: reqName,\n              email: reqEmail,\n              date: reqDate,\n              time: reqTime,\n              participants: parseInt(reqPart),\n            }),\n          }\n        );\n        const bookingstatus = await res.json();\n        console.log(bookingstatus);\n      }\n\n      div2.style.display = \"none\";\n      div3.style.display = \"flex\";\n    }\n  };\n}\n\n//# sourceURL=webpack://02-esc-website/./src/modules/modal.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.js");
/******/ 	
/******/ })()
;